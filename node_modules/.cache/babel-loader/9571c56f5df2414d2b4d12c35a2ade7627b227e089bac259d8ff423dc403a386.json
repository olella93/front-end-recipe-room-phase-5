{"ast":null,"code":"var _jsxFileName = \"/home/elvis/Development/code/phase-5/recipe-room-phase-5-project/front-end-recipe-room-phase-5/src/components/CommentBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setComments, addComment, editComment } from '../features/comments/commentSlice';\nimport { fetchComments, postComment, updateComment } from '../services/commentAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  recipeId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const comments = useSelector(state => state.comments.items);\n  const [text, setText] = useState('');\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    fetchComments(recipeId).then(data => dispatch(setComments(data)));\n  }, [recipeId, dispatch]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editId) {\n      const updated = await updateComment(editId, {\n        text\n      });\n      dispatch(editComment(updated));\n      setEditId(null);\n    } else {\n      const newComment = await postComment(recipeId, {\n        text\n      });\n      dispatch(addComment(newComment));\n    }\n    setText('');\n  };\n  const handleEdit = comment => {\n    setEditId(comment._id);\n    setText(comment.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a comment...\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editId ? 'Update' : 'Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), comments.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(c),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, c._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"JO0L6HTIrupND+kwVyzqqM3Wg0s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setComments","addComment","editComment","fetchComments","postComment","updateComment","jsxDEV","_jsxDEV","CommentSection","recipeId","_s","dispatch","comments","state","items","text","setText","editId","setEditId","then","data","handleSubmit","e","preventDefault","updated","newComment","handleEdit","comment","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","type","map","c","onClick","_c","$RefreshReg$"],"sources":["/home/elvis/Development/code/phase-5/recipe-room-phase-5-project/front-end-recipe-room-phase-5/src/components/CommentBox.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setComments, addComment, editComment } from '../features/comments/commentSlice';\nimport { fetchComments, postComment, updateComment } from '../services/commentAPI';\n\nconst CommentSection = ({ recipeId }) => {\n  const dispatch = useDispatch();\n  const comments = useSelector((state) => state.comments.items);\n  const [text, setText] = useState('');\n  const [editId, setEditId] = useState(null);\n\n  useEffect(() => {\n    fetchComments(recipeId).then((data) => dispatch(setComments(data)));\n  }, [recipeId, dispatch]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editId) {\n      const updated = await updateComment(editId, { text });\n      dispatch(editComment(updated));\n      setEditId(null);\n    } else {\n      const newComment = await postComment(recipeId, { text });\n      dispatch(addComment(newComment));\n    }\n    setText('');\n  };\n\n  const handleEdit = (comment) => {\n    setEditId(comment._id);\n    setText(comment.text);\n  };\n\n  return (\n    <div className=\"comment-section\">\n      <h3>Comments</h3>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"Write a comment...\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        />\n        <button type=\"submit\">{editId ? 'Update' : 'Post'}</button>\n      </form>\n\n      {comments.map((c) => (\n        <div key={c._id} className=\"comment-box\">\n          <p>{c.text}</p>\n          <button onClick={() => handleEdit(c)}>Edit</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}